// Code generated by protoc-gen-go. DO NOT EDIT.
// source: config-service.proto

package config

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type SetDesiredRequest struct {
	Identifier           string   `protobuf:"bytes,1,opt,name=identifier,proto3" json:"identifier,omitempty"`
	FieldName            string   `protobuf:"bytes,2,opt,name=fieldName,proto3" json:"fieldName,omitempty"`
	FieldValue           string   `protobuf:"bytes,3,opt,name=fieldValue,proto3" json:"fieldValue,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SetDesiredRequest) Reset()         { *m = SetDesiredRequest{} }
func (m *SetDesiredRequest) String() string { return proto.CompactTextString(m) }
func (*SetDesiredRequest) ProtoMessage()    {}
func (*SetDesiredRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_f48c1c3d9797070f, []int{0}
}

func (m *SetDesiredRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SetDesiredRequest.Unmarshal(m, b)
}
func (m *SetDesiredRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SetDesiredRequest.Marshal(b, m, deterministic)
}
func (m *SetDesiredRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SetDesiredRequest.Merge(m, src)
}
func (m *SetDesiredRequest) XXX_Size() int {
	return xxx_messageInfo_SetDesiredRequest.Size(m)
}
func (m *SetDesiredRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SetDesiredRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SetDesiredRequest proto.InternalMessageInfo

func (m *SetDesiredRequest) GetIdentifier() string {
	if m != nil {
		return m.Identifier
	}
	return ""
}

func (m *SetDesiredRequest) GetFieldName() string {
	if m != nil {
		return m.FieldName
	}
	return ""
}

func (m *SetDesiredRequest) GetFieldValue() string {
	if m != nil {
		return m.FieldValue
	}
	return ""
}

type CheckConsistencyRequest struct {
	DeviceEUI            string   `protobuf:"bytes,1,opt,name=deviceEUI,proto3" json:"deviceEUI,omitempty"`
	Slot                 int32    `protobuf:"varint,2,opt,name=slot,proto3" json:"slot,omitempty"`
	FieldIndex           int32    `protobuf:"varint,3,opt,name=fieldIndex,proto3" json:"fieldIndex,omitempty"`
	NumRetries           int32    `protobuf:"varint,4,opt,name=numRetries,proto3" json:"numRetries,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CheckConsistencyRequest) Reset()         { *m = CheckConsistencyRequest{} }
func (m *CheckConsistencyRequest) String() string { return proto.CompactTextString(m) }
func (*CheckConsistencyRequest) ProtoMessage()    {}
func (*CheckConsistencyRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_f48c1c3d9797070f, []int{1}
}

func (m *CheckConsistencyRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CheckConsistencyRequest.Unmarshal(m, b)
}
func (m *CheckConsistencyRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CheckConsistencyRequest.Marshal(b, m, deterministic)
}
func (m *CheckConsistencyRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CheckConsistencyRequest.Merge(m, src)
}
func (m *CheckConsistencyRequest) XXX_Size() int {
	return xxx_messageInfo_CheckConsistencyRequest.Size(m)
}
func (m *CheckConsistencyRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CheckConsistencyRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CheckConsistencyRequest proto.InternalMessageInfo

func (m *CheckConsistencyRequest) GetDeviceEUI() string {
	if m != nil {
		return m.DeviceEUI
	}
	return ""
}

func (m *CheckConsistencyRequest) GetSlot() int32 {
	if m != nil {
		return m.Slot
	}
	return 0
}

func (m *CheckConsistencyRequest) GetFieldIndex() int32 {
	if m != nil {
		return m.FieldIndex
	}
	return 0
}

func (m *CheckConsistencyRequest) GetNumRetries() int32 {
	if m != nil {
		return m.NumRetries
	}
	return 0
}

type UpdateReportedRequest struct {
	DeviceEUI            string   `protobuf:"bytes,1,opt,name=deviceEUI,proto3" json:"deviceEUI,omitempty"`
	FieldIndex           int32    `protobuf:"varint,2,opt,name=fieldIndex,proto3" json:"fieldIndex,omitempty"`
	FieldValue           []byte   `protobuf:"bytes,3,opt,name=fieldValue,proto3" json:"fieldValue,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UpdateReportedRequest) Reset()         { *m = UpdateReportedRequest{} }
func (m *UpdateReportedRequest) String() string { return proto.CompactTextString(m) }
func (*UpdateReportedRequest) ProtoMessage()    {}
func (*UpdateReportedRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_f48c1c3d9797070f, []int{2}
}

func (m *UpdateReportedRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateReportedRequest.Unmarshal(m, b)
}
func (m *UpdateReportedRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateReportedRequest.Marshal(b, m, deterministic)
}
func (m *UpdateReportedRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateReportedRequest.Merge(m, src)
}
func (m *UpdateReportedRequest) XXX_Size() int {
	return xxx_messageInfo_UpdateReportedRequest.Size(m)
}
func (m *UpdateReportedRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateReportedRequest.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateReportedRequest proto.InternalMessageInfo

func (m *UpdateReportedRequest) GetDeviceEUI() string {
	if m != nil {
		return m.DeviceEUI
	}
	return ""
}

func (m *UpdateReportedRequest) GetFieldIndex() int32 {
	if m != nil {
		return m.FieldIndex
	}
	return 0
}

func (m *UpdateReportedRequest) GetFieldValue() []byte {
	if m != nil {
		return m.FieldValue
	}
	return nil
}

type Response struct {
	Reply                string   `protobuf:"bytes,1,opt,name=reply,proto3" json:"reply,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Response) Reset()         { *m = Response{} }
func (m *Response) String() string { return proto.CompactTextString(m) }
func (*Response) ProtoMessage()    {}
func (*Response) Descriptor() ([]byte, []int) {
	return fileDescriptor_f48c1c3d9797070f, []int{3}
}

func (m *Response) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Response.Unmarshal(m, b)
}
func (m *Response) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Response.Marshal(b, m, deterministic)
}
func (m *Response) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Response.Merge(m, src)
}
func (m *Response) XXX_Size() int {
	return xxx_messageInfo_Response.Size(m)
}
func (m *Response) XXX_DiscardUnknown() {
	xxx_messageInfo_Response.DiscardUnknown(m)
}

var xxx_messageInfo_Response proto.InternalMessageInfo

func (m *Response) GetReply() string {
	if m != nil {
		return m.Reply
	}
	return ""
}

type ConfigDoc struct {
	Desired              map[string]string `protobuf:"bytes,1,rep,name=desired,proto3" json:"desired,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Reported             map[string]string `protobuf:"bytes,2,rep,name=reported,proto3" json:"reported,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *ConfigDoc) Reset()         { *m = ConfigDoc{} }
func (m *ConfigDoc) String() string { return proto.CompactTextString(m) }
func (*ConfigDoc) ProtoMessage()    {}
func (*ConfigDoc) Descriptor() ([]byte, []int) {
	return fileDescriptor_f48c1c3d9797070f, []int{4}
}

func (m *ConfigDoc) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ConfigDoc.Unmarshal(m, b)
}
func (m *ConfigDoc) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ConfigDoc.Marshal(b, m, deterministic)
}
func (m *ConfigDoc) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ConfigDoc.Merge(m, src)
}
func (m *ConfigDoc) XXX_Size() int {
	return xxx_messageInfo_ConfigDoc.Size(m)
}
func (m *ConfigDoc) XXX_DiscardUnknown() {
	xxx_messageInfo_ConfigDoc.DiscardUnknown(m)
}

var xxx_messageInfo_ConfigDoc proto.InternalMessageInfo

func (m *ConfigDoc) GetDesired() map[string]string {
	if m != nil {
		return m.Desired
	}
	return nil
}

func (m *ConfigDoc) GetReported() map[string]string {
	if m != nil {
		return m.Reported
	}
	return nil
}

type ConfigFields struct {
	Fields               []*ConfigField `protobuf:"bytes,1,rep,name=fields,proto3" json:"fields,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *ConfigFields) Reset()         { *m = ConfigFields{} }
func (m *ConfigFields) String() string { return proto.CompactTextString(m) }
func (*ConfigFields) ProtoMessage()    {}
func (*ConfigFields) Descriptor() ([]byte, []int) {
	return fileDescriptor_f48c1c3d9797070f, []int{5}
}

func (m *ConfigFields) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ConfigFields.Unmarshal(m, b)
}
func (m *ConfigFields) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ConfigFields.Marshal(b, m, deterministic)
}
func (m *ConfigFields) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ConfigFields.Merge(m, src)
}
func (m *ConfigFields) XXX_Size() int {
	return xxx_messageInfo_ConfigFields.Size(m)
}
func (m *ConfigFields) XXX_DiscardUnknown() {
	xxx_messageInfo_ConfigFields.DiscardUnknown(m)
}

var xxx_messageInfo_ConfigFields proto.InternalMessageInfo

func (m *ConfigFields) GetFields() []*ConfigField {
	if m != nil {
		return m.Fields
	}
	return nil
}

type ConfigField struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Index                int32    `protobuf:"varint,2,opt,name=index,proto3" json:"index,omitempty"`
	Desired              string   `protobuf:"bytes,3,opt,name=desired,proto3" json:"desired,omitempty"`
	Reported             string   `protobuf:"bytes,4,opt,name=reported,proto3" json:"reported,omitempty"`
	FieldType            string   `protobuf:"bytes,5,opt,name=fieldType,proto3" json:"fieldType,omitempty"`
	Description          string   `protobuf:"bytes,6,opt,name=description,proto3" json:"description,omitempty"`
	Default              string   `protobuf:"bytes,7,opt,name=default,proto3" json:"default,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ConfigField) Reset()         { *m = ConfigField{} }
func (m *ConfigField) String() string { return proto.CompactTextString(m) }
func (*ConfigField) ProtoMessage()    {}
func (*ConfigField) Descriptor() ([]byte, []int) {
	return fileDescriptor_f48c1c3d9797070f, []int{6}
}

func (m *ConfigField) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ConfigField.Unmarshal(m, b)
}
func (m *ConfigField) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ConfigField.Marshal(b, m, deterministic)
}
func (m *ConfigField) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ConfigField.Merge(m, src)
}
func (m *ConfigField) XXX_Size() int {
	return xxx_messageInfo_ConfigField.Size(m)
}
func (m *ConfigField) XXX_DiscardUnknown() {
	xxx_messageInfo_ConfigField.DiscardUnknown(m)
}

var xxx_messageInfo_ConfigField proto.InternalMessageInfo

func (m *ConfigField) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *ConfigField) GetIndex() int32 {
	if m != nil {
		return m.Index
	}
	return 0
}

func (m *ConfigField) GetDesired() string {
	if m != nil {
		return m.Desired
	}
	return ""
}

func (m *ConfigField) GetReported() string {
	if m != nil {
		return m.Reported
	}
	return ""
}

func (m *ConfigField) GetFieldType() string {
	if m != nil {
		return m.FieldType
	}
	return ""
}

func (m *ConfigField) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *ConfigField) GetDefault() string {
	if m != nil {
		return m.Default
	}
	return ""
}

type Identifier struct {
	Identifier           string   `protobuf:"bytes,1,opt,name=identifier,proto3" json:"identifier,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Identifier) Reset()         { *m = Identifier{} }
func (m *Identifier) String() string { return proto.CompactTextString(m) }
func (*Identifier) ProtoMessage()    {}
func (*Identifier) Descriptor() ([]byte, []int) {
	return fileDescriptor_f48c1c3d9797070f, []int{7}
}

func (m *Identifier) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Identifier.Unmarshal(m, b)
}
func (m *Identifier) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Identifier.Marshal(b, m, deterministic)
}
func (m *Identifier) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Identifier.Merge(m, src)
}
func (m *Identifier) XXX_Size() int {
	return xxx_messageInfo_Identifier.Size(m)
}
func (m *Identifier) XXX_DiscardUnknown() {
	xxx_messageInfo_Identifier.DiscardUnknown(m)
}

var xxx_messageInfo_Identifier proto.InternalMessageInfo

func (m *Identifier) GetIdentifier() string {
	if m != nil {
		return m.Identifier
	}
	return ""
}

type GetConfigByNameRequest struct {
	Identifier           string   `protobuf:"bytes,1,opt,name=identifier,proto3" json:"identifier,omitempty"`
	FieldName            string   `protobuf:"bytes,2,opt,name=fieldName,proto3" json:"fieldName,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetConfigByNameRequest) Reset()         { *m = GetConfigByNameRequest{} }
func (m *GetConfigByNameRequest) String() string { return proto.CompactTextString(m) }
func (*GetConfigByNameRequest) ProtoMessage()    {}
func (*GetConfigByNameRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_f48c1c3d9797070f, []int{8}
}

func (m *GetConfigByNameRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetConfigByNameRequest.Unmarshal(m, b)
}
func (m *GetConfigByNameRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetConfigByNameRequest.Marshal(b, m, deterministic)
}
func (m *GetConfigByNameRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetConfigByNameRequest.Merge(m, src)
}
func (m *GetConfigByNameRequest) XXX_Size() int {
	return xxx_messageInfo_GetConfigByNameRequest.Size(m)
}
func (m *GetConfigByNameRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetConfigByNameRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetConfigByNameRequest proto.InternalMessageInfo

func (m *GetConfigByNameRequest) GetIdentifier() string {
	if m != nil {
		return m.Identifier
	}
	return ""
}

func (m *GetConfigByNameRequest) GetFieldName() string {
	if m != nil {
		return m.FieldName
	}
	return ""
}

type UpdateFirmwareRequest struct {
	Firmware             string   `protobuf:"bytes,1,opt,name=firmware,proto3" json:"firmware,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UpdateFirmwareRequest) Reset()         { *m = UpdateFirmwareRequest{} }
func (m *UpdateFirmwareRequest) String() string { return proto.CompactTextString(m) }
func (*UpdateFirmwareRequest) ProtoMessage()    {}
func (*UpdateFirmwareRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_f48c1c3d9797070f, []int{9}
}

func (m *UpdateFirmwareRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateFirmwareRequest.Unmarshal(m, b)
}
func (m *UpdateFirmwareRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateFirmwareRequest.Marshal(b, m, deterministic)
}
func (m *UpdateFirmwareRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateFirmwareRequest.Merge(m, src)
}
func (m *UpdateFirmwareRequest) XXX_Size() int {
	return xxx_messageInfo_UpdateFirmwareRequest.Size(m)
}
func (m *UpdateFirmwareRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateFirmwareRequest.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateFirmwareRequest proto.InternalMessageInfo

func (m *UpdateFirmwareRequest) GetFirmware() string {
	if m != nil {
		return m.Firmware
	}
	return ""
}

func init() {
	proto.RegisterType((*SetDesiredRequest)(nil), "config.SetDesiredRequest")
	proto.RegisterType((*CheckConsistencyRequest)(nil), "config.CheckConsistencyRequest")
	proto.RegisterType((*UpdateReportedRequest)(nil), "config.UpdateReportedRequest")
	proto.RegisterType((*Response)(nil), "config.Response")
	proto.RegisterType((*ConfigDoc)(nil), "config.ConfigDoc")
	proto.RegisterMapType((map[string]string)(nil), "config.ConfigDoc.DesiredEntry")
	proto.RegisterMapType((map[string]string)(nil), "config.ConfigDoc.ReportedEntry")
	proto.RegisterType((*ConfigFields)(nil), "config.ConfigFields")
	proto.RegisterType((*ConfigField)(nil), "config.ConfigField")
	proto.RegisterType((*Identifier)(nil), "config.Identifier")
	proto.RegisterType((*GetConfigByNameRequest)(nil), "config.GetConfigByNameRequest")
	proto.RegisterType((*UpdateFirmwareRequest)(nil), "config.UpdateFirmwareRequest")
}

func init() { proto.RegisterFile("config-service.proto", fileDescriptor_f48c1c3d9797070f) }

var fileDescriptor_f48c1c3d9797070f = []byte{
	// 620 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xac, 0x55, 0xcd, 0x72, 0xd3, 0x30,
	0x10, 0xae, 0xf3, 0xd7, 0x64, 0x93, 0x42, 0x2a, 0x02, 0x18, 0x4f, 0x29, 0x19, 0x9f, 0x3a, 0x03,
	0xe4, 0xd0, 0x5e, 0x3a, 0xc9, 0x09, 0xd2, 0x36, 0xe4, 0xd2, 0x83, 0x4b, 0x7b, 0x0f, 0xf6, 0x06,
	0x34, 0x75, 0x6c, 0x57, 0x52, 0x5a, 0xf2, 0x0c, 0x3c, 0x18, 0xcf, 0xc1, 0x73, 0x70, 0x61, 0x24,
	0x59, 0xb6, 0x93, 0x78, 0x60, 0x98, 0xe9, 0xcd, 0xfb, 0x49, 0xab, 0x6f, 0xf7, 0xdb, 0x1f, 0x43,
	0xcf, 0x8f, 0xa3, 0x39, 0xfd, 0xfa, 0x9e, 0x23, 0xbb, 0xa7, 0x3e, 0x0e, 0x12, 0x16, 0x8b, 0x98,
	0x34, 0x34, 0xea, 0xde, 0xc1, 0xfe, 0x15, 0x8a, 0x33, 0xe4, 0x94, 0x61, 0xe0, 0xe1, 0xdd, 0x12,
	0xb9, 0x20, 0x87, 0x00, 0x34, 0xc0, 0x48, 0xd0, 0x39, 0x45, 0x66, 0x5b, 0x7d, 0xeb, 0xa8, 0xe5,
	0x15, 0x10, 0x72, 0x00, 0xad, 0x39, 0xc5, 0x30, 0xb8, 0x9c, 0x2d, 0xd0, 0xae, 0xa8, 0xe3, 0x1c,
	0x90, 0xde, 0xca, 0xb8, 0x99, 0x85, 0x4b, 0xb4, 0xab, 0xda, 0x3b, 0x47, 0xdc, 0x1f, 0x16, 0xbc,
	0x1c, 0x7f, 0x43, 0xff, 0x76, 0x1c, 0x47, 0x9c, 0x72, 0x81, 0x91, 0xbf, 0x32, 0xcc, 0x07, 0xd0,
	0x0a, 0x50, 0x86, 0x79, 0x7e, 0x3d, 0x4d, 0x89, 0x73, 0x80, 0x10, 0xa8, 0xf1, 0x30, 0x16, 0x8a,
	0xb2, 0xee, 0xa9, 0xef, 0x8c, 0x6d, 0x1a, 0x05, 0xf8, 0x5d, 0xb1, 0xd5, 0xbd, 0x02, 0x22, 0xcf,
	0xa3, 0xe5, 0xc2, 0x43, 0xc1, 0x28, 0x72, 0xbb, 0xa6, 0xcf, 0x73, 0xc4, 0x5d, 0xc2, 0xf3, 0xeb,
	0x24, 0x98, 0x09, 0xf4, 0x30, 0x89, 0x99, 0xc8, 0x45, 0xf8, 0x7b, 0x28, 0xeb, 0xb4, 0x95, 0x32,
	0xda, 0x0d, 0x11, 0x3a, 0x6b, 0x22, 0xf4, 0xa1, 0xe9, 0x21, 0x4f, 0xe2, 0x88, 0x23, 0xe9, 0x41,
	0x9d, 0x61, 0x12, 0xae, 0x52, 0x16, 0x6d, 0xb8, 0xbf, 0x2d, 0x68, 0x8d, 0x55, 0x91, 0xce, 0x62,
	0x9f, 0x9c, 0xc2, 0x6e, 0xa0, 0x8b, 0x64, 0x5b, 0xfd, 0xea, 0x51, 0xfb, 0xf8, 0x70, 0xa0, 0x2b,
	0x38, 0xc8, 0xee, 0x0c, 0xd2, 0x2a, 0x9e, 0x47, 0x82, 0xad, 0x3c, 0x73, 0x9d, 0x8c, 0xa0, 0xc9,
	0xd2, 0xd4, 0xec, 0x8a, 0x72, 0x7d, 0xb3, 0xed, 0x6a, 0x92, 0xd7, 0xbe, 0x99, 0x83, 0x33, 0x84,
	0x4e, 0xf1, 0x55, 0xd2, 0x85, 0xea, 0x2d, 0x9a, 0x40, 0xe5, 0xa7, 0x0c, 0xfe, 0x5e, 0xe5, 0xa8,
	0xfb, 0x40, 0x1b, 0xc3, 0xca, 0xa9, 0xe5, 0x8c, 0x60, 0x6f, 0xed, 0xd9, 0xff, 0x71, 0x76, 0x47,
	0xd0, 0xd1, 0xd1, 0x5d, 0x48, 0xcd, 0x38, 0x79, 0x0b, 0x0d, 0xa5, 0x1e, 0x4f, 0xd3, 0x7f, 0xb6,
	0x9e, 0x83, 0xba, 0xe5, 0xa5, 0x57, 0xdc, 0x9f, 0x16, 0xb4, 0x0b, 0xb8, 0xec, 0x9b, 0x48, 0xb6,
	0xaa, 0x66, 0x56, 0xdf, 0x92, 0x9a, 0x16, 0x6a, 0xa7, 0x0d, 0x62, 0xe7, 0x32, 0xeb, 0xc6, 0xcd,
	0x64, 0x74, 0x0a, 0x32, 0xd6, 0xd4, 0x51, 0x66, 0x67, 0xf3, 0xf0, 0x79, 0x95, 0xa0, 0x5d, 0x2f,
	0xcc, 0x83, 0x04, 0x48, 0x1f, 0xda, 0x01, 0x72, 0x9f, 0xd1, 0x44, 0xd0, 0x38, 0xb2, 0x1b, 0xea,
	0xbc, 0x08, 0x69, 0xd6, 0xf9, 0x6c, 0x19, 0x0a, 0x7b, 0xd7, 0xb0, 0x2a, 0xd3, 0x7d, 0x07, 0x30,
	0xcd, 0xe7, 0xee, 0x1f, 0x73, 0xe9, 0xde, 0xc0, 0x8b, 0x09, 0x0a, 0x9d, 0xf9, 0xc7, 0x95, 0x1c,
	0xc6, 0x47, 0x99, 0x68, 0xf7, 0xc4, 0xcc, 0xc8, 0x05, 0x65, 0x8b, 0x87, 0x19, 0xcb, 0x9e, 0x75,
	0xa0, 0x39, 0x4f, 0xa1, 0xf4, 0xd1, 0xcc, 0x3e, 0xfe, 0x55, 0x85, 0x3d, 0x1d, 0xca, 0x95, 0xde,
	0x3c, 0x64, 0x04, 0x90, 0xef, 0x1a, 0xf2, 0xca, 0x54, 0x70, 0x6b, 0xff, 0x38, 0x5d, 0x73, 0x64,
	0x46, 0xc4, 0xdd, 0x21, 0x13, 0xe8, 0x6e, 0x2e, 0x0d, 0x92, 0x37, 0x72, 0xf9, 0x3a, 0x29, 0x7d,
	0x68, 0x0c, 0x4f, 0xd6, 0x07, 0x9e, 0xbc, 0x36, 0xb7, 0x4a, 0x17, 0x41, 0xe9, 0x23, 0x9f, 0xe0,
	0xe9, 0x86, 0xd2, 0x24, 0x1b, 0xc8, 0xf2, 0x12, 0x38, 0x65, 0x1d, 0xeb, 0xee, 0x90, 0x21, 0x74,
	0x26, 0x28, 0x3e, 0x84, 0xa1, 0x86, 0x09, 0x31, 0xd7, 0xf2, 0xba, 0x3b, 0xbd, 0x12, 0x57, 0xae,
	0x7c, 0x65, 0x14, 0x97, 0xf8, 0x90, 0xef, 0x89, 0x32, 0xf7, 0xfd, 0xad, 0x79, 0x2f, 0xca, 0x60,
	0x6a, 0xba, 0x29, 0xc3, 0x46, 0xad, 0xcb, 0x64, 0xf8, 0xd2, 0x50, 0x3f, 0x93, 0x93, 0x3f, 0x01,
	0x00, 0x00, 0xff, 0xff, 0xb4, 0x9b, 0x1d, 0x44, 0x64, 0x06, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// ConfigServiceClient is the client API for ConfigService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type ConfigServiceClient interface {
	SetDesired(ctx context.Context, in *SetDesiredRequest, opts ...grpc.CallOption) (*Response, error)
	CheckConsistency(ctx context.Context, in *CheckConsistencyRequest, opts ...grpc.CallOption) (*Response, error)
	UpdateReported(ctx context.Context, in *UpdateReportedRequest, opts ...grpc.CallOption) (*Response, error)
	GetConfigByName(ctx context.Context, in *GetConfigByNameRequest, opts ...grpc.CallOption) (*ConfigField, error)
	GetAllConfig(ctx context.Context, in *Identifier, opts ...grpc.CallOption) (*ConfigFields, error)
	GetNewConfigDoc(ctx context.Context, in *Identifier, opts ...grpc.CallOption) (*ConfigDoc, error)
	UpdateFirmware(ctx context.Context, in *UpdateFirmwareRequest, opts ...grpc.CallOption) (*Response, error)
}

type configServiceClient struct {
	cc *grpc.ClientConn
}

func NewConfigServiceClient(cc *grpc.ClientConn) ConfigServiceClient {
	return &configServiceClient{cc}
}

func (c *configServiceClient) SetDesired(ctx context.Context, in *SetDesiredRequest, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/config.ConfigService/SetDesired", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *configServiceClient) CheckConsistency(ctx context.Context, in *CheckConsistencyRequest, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/config.ConfigService/CheckConsistency", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *configServiceClient) UpdateReported(ctx context.Context, in *UpdateReportedRequest, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/config.ConfigService/UpdateReported", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *configServiceClient) GetConfigByName(ctx context.Context, in *GetConfigByNameRequest, opts ...grpc.CallOption) (*ConfigField, error) {
	out := new(ConfigField)
	err := c.cc.Invoke(ctx, "/config.ConfigService/GetConfigByName", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *configServiceClient) GetAllConfig(ctx context.Context, in *Identifier, opts ...grpc.CallOption) (*ConfigFields, error) {
	out := new(ConfigFields)
	err := c.cc.Invoke(ctx, "/config.ConfigService/GetAllConfig", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *configServiceClient) GetNewConfigDoc(ctx context.Context, in *Identifier, opts ...grpc.CallOption) (*ConfigDoc, error) {
	out := new(ConfigDoc)
	err := c.cc.Invoke(ctx, "/config.ConfigService/GetNewConfigDoc", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *configServiceClient) UpdateFirmware(ctx context.Context, in *UpdateFirmwareRequest, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/config.ConfigService/UpdateFirmware", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// ConfigServiceServer is the server API for ConfigService service.
type ConfigServiceServer interface {
	SetDesired(context.Context, *SetDesiredRequest) (*Response, error)
	CheckConsistency(context.Context, *CheckConsistencyRequest) (*Response, error)
	UpdateReported(context.Context, *UpdateReportedRequest) (*Response, error)
	GetConfigByName(context.Context, *GetConfigByNameRequest) (*ConfigField, error)
	GetAllConfig(context.Context, *Identifier) (*ConfigFields, error)
	GetNewConfigDoc(context.Context, *Identifier) (*ConfigDoc, error)
	UpdateFirmware(context.Context, *UpdateFirmwareRequest) (*Response, error)
}

// UnimplementedConfigServiceServer can be embedded to have forward compatible implementations.
type UnimplementedConfigServiceServer struct {
}

func (*UnimplementedConfigServiceServer) SetDesired(ctx context.Context, req *SetDesiredRequest) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SetDesired not implemented")
}
func (*UnimplementedConfigServiceServer) CheckConsistency(ctx context.Context, req *CheckConsistencyRequest) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CheckConsistency not implemented")
}
func (*UnimplementedConfigServiceServer) UpdateReported(ctx context.Context, req *UpdateReportedRequest) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateReported not implemented")
}
func (*UnimplementedConfigServiceServer) GetConfigByName(ctx context.Context, req *GetConfigByNameRequest) (*ConfigField, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetConfigByName not implemented")
}
func (*UnimplementedConfigServiceServer) GetAllConfig(ctx context.Context, req *Identifier) (*ConfigFields, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetAllConfig not implemented")
}
func (*UnimplementedConfigServiceServer) GetNewConfigDoc(ctx context.Context, req *Identifier) (*ConfigDoc, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetNewConfigDoc not implemented")
}
func (*UnimplementedConfigServiceServer) UpdateFirmware(ctx context.Context, req *UpdateFirmwareRequest) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateFirmware not implemented")
}

func RegisterConfigServiceServer(s *grpc.Server, srv ConfigServiceServer) {
	s.RegisterService(&_ConfigService_serviceDesc, srv)
}

func _ConfigService_SetDesired_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SetDesiredRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ConfigServiceServer).SetDesired(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/config.ConfigService/SetDesired",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ConfigServiceServer).SetDesired(ctx, req.(*SetDesiredRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ConfigService_CheckConsistency_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CheckConsistencyRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ConfigServiceServer).CheckConsistency(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/config.ConfigService/CheckConsistency",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ConfigServiceServer).CheckConsistency(ctx, req.(*CheckConsistencyRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ConfigService_UpdateReported_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateReportedRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ConfigServiceServer).UpdateReported(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/config.ConfigService/UpdateReported",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ConfigServiceServer).UpdateReported(ctx, req.(*UpdateReportedRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ConfigService_GetConfigByName_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetConfigByNameRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ConfigServiceServer).GetConfigByName(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/config.ConfigService/GetConfigByName",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ConfigServiceServer).GetConfigByName(ctx, req.(*GetConfigByNameRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ConfigService_GetAllConfig_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Identifier)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ConfigServiceServer).GetAllConfig(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/config.ConfigService/GetAllConfig",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ConfigServiceServer).GetAllConfig(ctx, req.(*Identifier))
	}
	return interceptor(ctx, in, info, handler)
}

func _ConfigService_GetNewConfigDoc_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Identifier)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ConfigServiceServer).GetNewConfigDoc(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/config.ConfigService/GetNewConfigDoc",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ConfigServiceServer).GetNewConfigDoc(ctx, req.(*Identifier))
	}
	return interceptor(ctx, in, info, handler)
}

func _ConfigService_UpdateFirmware_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateFirmwareRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ConfigServiceServer).UpdateFirmware(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/config.ConfigService/UpdateFirmware",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ConfigServiceServer).UpdateFirmware(ctx, req.(*UpdateFirmwareRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _ConfigService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "config.ConfigService",
	HandlerType: (*ConfigServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "SetDesired",
			Handler:    _ConfigService_SetDesired_Handler,
		},
		{
			MethodName: "CheckConsistency",
			Handler:    _ConfigService_CheckConsistency_Handler,
		},
		{
			MethodName: "UpdateReported",
			Handler:    _ConfigService_UpdateReported_Handler,
		},
		{
			MethodName: "GetConfigByName",
			Handler:    _ConfigService_GetConfigByName_Handler,
		},
		{
			MethodName: "GetAllConfig",
			Handler:    _ConfigService_GetAllConfig_Handler,
		},
		{
			MethodName: "GetNewConfigDoc",
			Handler:    _ConfigService_GetNewConfigDoc_Handler,
		},
		{
			MethodName: "UpdateFirmware",
			Handler:    _ConfigService_UpdateFirmware_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "config-service.proto",
}
