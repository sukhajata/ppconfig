# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
import grpc

import config_service_pb2 as config__service__pb2


class ConfigServiceStub(object):
  # missing associated documentation comment in .proto file
  pass

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.SetDesired = channel.unary_unary(
        '/config.ConfigService/SetDesired',
        request_serializer=config__service__pb2.SetDesiredRequest.SerializeToString,
        response_deserializer=config__service__pb2.Response.FromString,
        )
    self.CheckConsistency = channel.unary_unary(
        '/config.ConfigService/CheckConsistency',
        request_serializer=config__service__pb2.CheckConsistencyRequest.SerializeToString,
        response_deserializer=config__service__pb2.Response.FromString,
        )
    self.UpdateReported = channel.unary_unary(
        '/config.ConfigService/UpdateReported',
        request_serializer=config__service__pb2.UpdateReportedRequest.SerializeToString,
        response_deserializer=config__service__pb2.Response.FromString,
        )
    self.GetConfigByName = channel.unary_unary(
        '/config.ConfigService/GetConfigByName',
        request_serializer=config__service__pb2.GetConfigByNameRequest.SerializeToString,
        response_deserializer=config__service__pb2.ConfigField.FromString,
        )
    self.GetConfigByIndex = channel.unary_unary(
        '/config.ConfigService/GetConfigByIndex',
        request_serializer=config__service__pb2.GetConfigByIndexRequest.SerializeToString,
        response_deserializer=config__service__pb2.ConfigField.FromString,
        )
    self.GetAllConfig = channel.unary_unary(
        '/config.ConfigService/GetAllConfig',
        request_serializer=config__service__pb2.Identifier.SerializeToString,
        response_deserializer=config__service__pb2.ConfigFields.FromString,
        )
    self.GetNewConfigDoc = channel.unary_unary(
        '/config.ConfigService/GetNewConfigDoc',
        request_serializer=config__service__pb2.Identifier.SerializeToString,
        response_deserializer=config__service__pb2.ConfigDoc.FromString,
        )
    self.UpdateFirmware = channel.unary_unary(
        '/config.ConfigService/UpdateFirmware',
        request_serializer=config__service__pb2.UpdateFirmwareRequest.SerializeToString,
        response_deserializer=config__service__pb2.Response.FromString,
        )
    self.AssignRadioOffset = channel.unary_unary(
        '/config.ConfigService/AssignRadioOffset',
        request_serializer=config__service__pb2.Identifier.SerializeToString,
        response_deserializer=config__service__pb2.ConfigField.FromString,
        )


class ConfigServiceServicer(object):
  # missing associated documentation comment in .proto file
  pass

  def SetDesired(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def CheckConsistency(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def UpdateReported(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def GetConfigByName(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def GetConfigByIndex(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def GetAllConfig(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def GetNewConfigDoc(self, request, context):
    """rpc CreatePendingConfig(Identifier) returns (Response) {}

    rpc CreateNewConfig(NewConfigRequest) returns (Response) {}

    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def UpdateFirmware(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def AssignRadioOffset(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_ConfigServiceServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'SetDesired': grpc.unary_unary_rpc_method_handler(
          servicer.SetDesired,
          request_deserializer=config__service__pb2.SetDesiredRequest.FromString,
          response_serializer=config__service__pb2.Response.SerializeToString,
      ),
      'CheckConsistency': grpc.unary_unary_rpc_method_handler(
          servicer.CheckConsistency,
          request_deserializer=config__service__pb2.CheckConsistencyRequest.FromString,
          response_serializer=config__service__pb2.Response.SerializeToString,
      ),
      'UpdateReported': grpc.unary_unary_rpc_method_handler(
          servicer.UpdateReported,
          request_deserializer=config__service__pb2.UpdateReportedRequest.FromString,
          response_serializer=config__service__pb2.Response.SerializeToString,
      ),
      'GetConfigByName': grpc.unary_unary_rpc_method_handler(
          servicer.GetConfigByName,
          request_deserializer=config__service__pb2.GetConfigByNameRequest.FromString,
          response_serializer=config__service__pb2.ConfigField.SerializeToString,
      ),
      'GetConfigByIndex': grpc.unary_unary_rpc_method_handler(
          servicer.GetConfigByIndex,
          request_deserializer=config__service__pb2.GetConfigByIndexRequest.FromString,
          response_serializer=config__service__pb2.ConfigField.SerializeToString,
      ),
      'GetAllConfig': grpc.unary_unary_rpc_method_handler(
          servicer.GetAllConfig,
          request_deserializer=config__service__pb2.Identifier.FromString,
          response_serializer=config__service__pb2.ConfigFields.SerializeToString,
      ),
      'GetNewConfigDoc': grpc.unary_unary_rpc_method_handler(
          servicer.GetNewConfigDoc,
          request_deserializer=config__service__pb2.Identifier.FromString,
          response_serializer=config__service__pb2.ConfigDoc.SerializeToString,
      ),
      'UpdateFirmware': grpc.unary_unary_rpc_method_handler(
          servicer.UpdateFirmware,
          request_deserializer=config__service__pb2.UpdateFirmwareRequest.FromString,
          response_serializer=config__service__pb2.Response.SerializeToString,
      ),
      'AssignRadioOffset': grpc.unary_unary_rpc_method_handler(
          servicer.AssignRadioOffset,
          request_deserializer=config__service__pb2.Identifier.FromString,
          response_serializer=config__service__pb2.ConfigField.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'config.ConfigService', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))
